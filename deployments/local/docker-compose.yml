services:
  postgres:
    image: postgres:16-alpine
    container_name: tennex-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: tennex
      POSTGRES_USER: tennex
      POSTGRES_PASSWORD: tennex123
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tennex -d tennex"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - tennex-net

  nats:
    image: nats:2.10-alpine
    container_name: tennex-nats
    restart: unless-stopped
    command: [
      "--port", "4222",
      "--http_port", "8222",
      "--config", "/etc/nats/nats.conf"
    ]
    ports:
      - "4222:4222"  # NATS port
      - "8222:8222"  # HTTP monitoring port
    volumes:
      - ./nats.conf:/etc/nats/nats.conf:ro
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8222/varz"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - tennex-net

  minio:
    image: minio/minio:latest
    container_name: tennex-minio
    restart: unless-stopped
    command: server /data --address ":9000" --console-address ":9001"
    environment:
      MINIO_ROOT_USER: tennex
      MINIO_ROOT_PASSWORD: tennex123
    ports:
      - "9000:9000"  # API port
      - "9001:9001"  # Console port
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 10s
    networks:
      - tennex-net

  backend:
    build:
      context: ../../
      dockerfile: services/backend/Dockerfile
    container_name: tennex-backend
    restart: unless-stopped
    environment:
      TENNEX_HTTP_PORT: 8000
      TENNEX_GRPC_PORT: 6001
      TENNEX_DATABASE_URL: postgres://tennex:tennex123@postgres:5432/tennex?sslmode=disable
      TENNEX_NATS_URL: nats://nats:4222
      TENNEX_AUTH_JWT_SECRET: dev-jwt-secret-change-in-production
      TENNEX_LOG_LEVEL: debug
    ports:
      - "8000:8000"  # HTTP API
      - "6001:6001"  # gRPC
    depends_on:
      postgres:
        condition: service_healthy
      nats:
        condition: service_healthy
    networks:
      - tennex-net
    profiles:
      - full

  eventstream:
    build:
      context: ../../
      dockerfile: services/eventstream/Dockerfile
    container_name: tennex-eventstream
    restart: unless-stopped
    environment:
      TENNEX_HTTP_PORT: 6002
      TENNEX_NATS_URL: nats://nats:4222
      TENNEX_BACKEND_URL: http://backend:8000
      TENNEX_LOG_LEVEL: debug
    ports:
      - "6002:6002"  # WebSocket API
    depends_on:
      - backend
      - nats
    networks:
      - tennex-net
    profiles:
      - full

  bridge:
    build:
      context: ../../
      dockerfile: services/bridge/Dockerfile
    container_name: tennex-bridge
    restart: unless-stopped
    environment:
      TENNEX_HTTP_PORT: 6003
      TENNEX_DATABASE_URL: postgres://tennex:tennex123@postgres:5432/tennex?sslmode=disable
      TENNEX_BACKEND_URL: http://backend:8000
      JWT_SECRET: dev-jwt-secret-change-in-production
      TENNEX_LOG_LEVEL: debug
    ports:
      - "6003:6003"  # Bridge API
    depends_on:
      - backend
    networks:
      - tennex-net
    profiles:
      - full

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: tennex-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@tennex.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin/servers.json:/pgadmin4/servers.json
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - tennex-net

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  minio_data:
    driver: local

networks:
  tennex-net:
    driver: bridge
